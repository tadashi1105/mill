// Base

html {
	box-sizing: border-box;
}

*,
*::before,
*::after {
	box-sizing: inherit;
}


// Make viewport responsive
//
// @viewport is needed because IE 10+ doesn't honor <meta name="viewport"> in
// some cases. See http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/.
// Eventually @viewport will replace <meta name="viewport">. It's been manually
// prefixed for forward-compatibility.
//
// However, `device-width` is broken on IE 10 on Windows (Phone) 8,
// (see http://timkadlec.com/2013/01/windows-phone-8-and-device-width/ and https://github.com/twbs/bootstrap/issues/10497)
// and the fix for that involves a snippet of JavaScript to sniff the user agent
// and apply some conditional CSS.
//
// See http://getbootstrap.com/getting-started/#support-ie10-width for the relevant hack.
//
// Wrap `@viewport` with `@at-root` for when folks do a nested import (e.g.,
// `.class-name { @import "bootstrap"; }`).
//
// Includes future-proofed vendor prefixes as well.
@at-root {
	@-moz-viewport      { width: device-width; }
	@-ms-viewport       { width: device-width; }
	@-o-viewport        { width: device-width; }
	@-webkit-viewport   { width: device-width; }
	@viewport           { width: device-width; }
}


//
// Reset HTML, body, and more
//

html {
	// Sets a specific default `font-size` for user with `rem` type scales.
	font-size: $site-font-size-root;
	// Changes the default tap highlight to be completely transparent in iOS.
	-webkit-tap-highlight-color: rgba(0,0,0,0);
}

body {
	// Make the `body` use the `font-size-root`
	font-family: $site-font-family-base;
	@include rem(font-size, $site-font-size-sm);
	line-height: $site-line-height;
	// Go easy on the eyes and use something other than `#000` for text
	color: $site-text-color;
	// By default, `<body>` has no `background-color` so we set one as a best practice.
	background-color: $site-bg-color;

	@include media-breakpoint-up(md) {
		@include rem(font-size, $site-font-size-base);
	}
}

// Suppress the focus outline on elements that cannot be accessed via keyboard.
// This prevents an unwanted focus outline from appearing around elements that
// might still respond to pointer events.
//
// Credit: https://github.com/suitcss/base
[tabindex="-1"]:focus {
	outline: none !important;
}


//
// Typography
//

// Remove top margins from headings
//
// By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
// margin for easier control within type scales as it avoids margin collapsing.
h1, h2, h3, h4, h5, h6 {
	margin-top: 0;
	@include rem(margin-bottom, $site-headings-margin-bottom);
}

// Reset margins on paragraphs
//
// Similarly, the top margin on `<p>`s get reset. However, we also reset the
// bottom margin to use `rem` units instead of `em`.
p {
	margin-top: 0;
	@include rem(margin-bottom, $site-typo-margin-bottom);
}

// Abbreviations and acronyms
abbr[title],
// Add data-* attribute to help out our tooltip plugin, per https://github.com/twbs/bootstrap/issues/5257
abbr[data-original-title] {
	cursor: help;
	border-bottom: 1px dotted $site-abbr-border-color;
}

address {
	@include rem(margin-bottom, $site-typo-margin-bottom);
	font-style: normal;
	line-height: inherit;
}

ol,
ul,
dl {
	margin-top: 0;
	@include rem(margin-bottom, $site-typo-margin-bottom);
}

ol ol,
ul ul,
ol ul,
ul ol {
	margin-bottom: 0;
}

dt {
	font-weight: $site-dt-font-weight;
}

dd {
	@include rem(margin-bottom, $site-typo-margin-bottom-secondary);
	margin-left: 0; // Undo browser default
}

blockquote {
	@include rem(margin, 0 0 $site-typo-margin-bottom);
}


//
// Links
//

a {
	color: $site-link-color;
	text-decoration: $site-link-decoration;

	@include hover-focus {
		color: $site-link-hover-color;
		text-decoration: $site-link-hover-decoration;
	}

	&:focus {
		@include tab-focus();
	}
}


//
// Code
//

pre {
	// Remove browser default top margin
	margin-top: 0;
	// Reset browser default of `1em` to use `rem`s
	@include rem(margin-bottom, $site-typo-margin-bottom);
}


//
// Figures
//

figure {
	// Normalize adds `margin` to `figure`s as browsers apply it inconsistently.
	// We reset that to create a better flow in-page.
	@include rem(margin, 0 0 $site-typo-margin-bottom);
}


//
// Images
//

img {
	// By default, `<img>`s are `inline-block`. This assumes that, and vertically
	// centers them. This won't apply should you reset them to `block` level.
	vertical-align: middle;
	// Note: `<img>`s are deliberately not made responsive by default.
	// For the rationale behind this, see the comments on the `.img-fluid` class.
}


// iOS "clickable elements" fix for role="button"
//
// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

[role="button"] {
	cursor: pointer;
}


// Avoid 300ms click delay on touch devices that support the `touch-action` CSS property.
//
// In particular, unlike most other browsers, IE11+Edge on Windows 10 on touch devices and IE Mobile 10-11
// DON'T remove the click delay when `<meta name="viewport" content="width=device-width">` is present.
// However, they DO support removing the click delay via `touch-action: manipulation`.
// See:
// * http://v4-alpha.getbootstrap.com/content/reboot/#click-delay-optimization-for-touch
// * http://caniuse.com/#feat=css-touch-action
// * http://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay

a,
area,
button,
[role="button"],
input,
label,
select,
summary,
textarea {
	touch-action: manipulation;
}


//
// Tables
//

table {
	// Reset for nesting within parents with `background-color`.
	background-color: $site-table-bg;
}

caption {
	@include rem(padding-top, $site-table-cell-padding);
	@include rem(padding-bottom, $site-table-cell-padding);
	color: $site-text-muted;
	text-align: left;
	caption-side: bottom;
}

th {
	// Centered by default, but left-align-ed to match the `td`s below.
	text-align: left;
}


//
// Forms
//

label {
	// Allow labels to use `margin` for spacing.
	display: inline-block;
	@include rem(margin-bottom, $site-typo-margin-bottom-secondary);
}

// Work around a Firefox/IE bug where the transparent `button` background
// results in a loss of the default `button` focus styles.
//
// Credit: https://github.com/suitcss/base/
button:focus {
	outline: 1px dotted;
	outline: 5px auto -webkit-focus-ring-color;
}

input,
button,
select,
textarea {
	// Remove all `margin`s so our classes don't have to do it themselves.
	margin: 0;
	// Normalize includes `font: inherit;`, so `font-family`. `font-size`, etc are
	// properly inherited. However, `line-height` isn't addressed there. Using this
	// ensures we don't need to unnecessarily redeclare the global font stack.
	line-height: inherit;
	// iOS adds rounded borders by default
	border-radius: 0;
}

textarea {
	// Textareas should really only resize vertically so they don't break their (horizontal) containers.
	resize: vertical;
}

fieldset {
	// Chrome and Firefox set a `min-width: min-content;` on fieldsets,
	// so we reset that to ensure it behaves more like a standard block element.
	// See https://github.com/twbs/bootstrap/issues/12359.
	min-width: 0;
	// Reset the default outline behavior of fieldsets so they don't affect page layout.
	padding: 0;
	margin: 0;
	border: 0;
}

legend {
	// Reset the entire legend element to match the `fieldset`
	display: block;
	width: 100%;
	padding: 0;
	@include rem(margin-bottom, $site-typo-margin-bottom-secondary);
	@include rem(font-size, $site-font-size-lg);
	line-height: inherit;
	// border: 0;
}

input[type="search"] {
	// Undo Normalize's default here to match our global overrides.
	box-sizing: inherit;
	// This overrides the extra rounded corners on search inputs in iOS so that our
	// `.form-control` class can properly style them. Note that this cannot simply
	// be added to `.form-control` as it's not specific enough. For details, see
	// https://github.com/twbs/bootstrap/issues/11586.
	-webkit-appearance: none;
}

// todo: needed?
output {
	display: inline-block;
	//  font-size: $site-font-size-base;
	//  line-height: $site-line-height;
	//  color: $site-input-color;
}

// Always hide an element with the `hidden` HTML attribute (from PureCSS).
[hidden] {
	display: none !important;
}
